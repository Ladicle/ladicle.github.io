<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mesos on Exception();</title>
    <link>https://blog.ladicle.com/tags/mesos/</link>
    <description>Recent content in Mesos on Exception();</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Thu, 04 Aug 2016 20:22:57 +0900</lastBuildDate>
    
	<atom:link href="https://blog.ladicle.com/tags/mesos/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Apache Mesos勉強会に行ってきた</title>
      <link>https://blog.ladicle.com/post/apache-mesos/</link>
      <pubDate>Thu, 04 Aug 2016 20:22:57 +0900</pubDate>
      
      <guid>https://blog.ladicle.com/post/apache-mesos/</guid>
      <description>MesosはKubernetesと比較されることが多いので気になっていた。
イベントのURLはこちら。
1. Mesos とは何か 木内さん @クリエーションライン
概要  DCOS(ﾃﾞｨｰｼｰｵｰｴｽ)と呼べ YARN日書いが、YARNはHadoopのためのジョブスケジューラ Mesosはサービス基盤の運用を目的にしている(対象範囲が広い) Mesos is cluster of cluster Dockerとの統合をサポート
  コンテナ化すると分業が可能  データセンタチーム : 実行基盤の配置だけ インフラチーム : リソースの稼働状況だけ アプリケーションチーム : コンテナの内容だけ   この手の物は作業が少なくなるというより
(むしろ見るコンポーネントは増えていることが多々) 分業できるところに利点を置いてるので、小さいチームもしくは大きいチームでも分業されないと 運用負荷は上がるばかりだと思う
 2. Docker ホスティングサービス &amp;lsquo;Arukas&amp;rsquo; での Mesos + Marathon の活用について 山田 修司 さん @さくらインターネット
 構成  Zookeeper Master Slave: executor実行, CPU情報の送信  k8s VS Mesos k8sはセットアップ簡単だけどシングルテナント向けでコンテナOnly。
 k8sのMultiTenant話はここら辺にある。
セットアップ楽という話が出ていたが&amp;hellip;。(Mesosがものすごくツライのかもしれない)
 Twitterでの議論 Mesos+Marathonはなぜヘビー級に汚れる環境向けなのかの説明が結局なかった気がするが、なんでだろ。環境が分離されるから、がその理由だった?</description>
    </item>
    
  </channel>
</rss>