<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>emacs on Ladicle</title><link>https://ladicle.com/tags/emacs/</link><description>Recent content in emacs on Ladicle</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 22 Jan 2021 22:13:55 +0900</lastBuildDate><atom:link href="https://ladicle.com/tags/emacs/index.xml" rel="self" type="application/rss+xml"/><item><title>org-captureのテンプレート ver. 2021</title><link>https://ladicle.com/post/20210120_105729/</link><pubDate>Fri, 22 Jan 2021 22:13:55 +0900</pubDate><guid>https://ladicle.com/post/20210120_105729/</guid><description>かつてのorg-rememberとか、org-captureに移行してスグぐらいの頃は機能足りなかったせいか書き換えることが多かったけど、最近はテンプレートも安定してきた。
個人メモは1ファイルに書き連ねていくよりも org-journal で日々書き捨て、読み返したいものだけ(個人&amp;amp;パブリック)ブログにエクスポート方式の相性が良かったので、org-capture templateもその日のjournalに吐き出すものが多い。
(defun ladicle/get-today-diary () (concat org-journal-dir (format-time-string &amp;#34;%Y%m%d.org&amp;#34; (current-time)))) (setq org-capture-templates &amp;#39;((&amp;#34;t&amp;#34; &amp;#34;Write down the thoughts of this moment with a timestamp.&amp;#34; entry (file+headline ladicle/get-today-diary &amp;#34;Log&amp;#34;) &amp;#34;* %T %^{Tweet}&amp;#34; :immediate-finish t) (&amp;#34;e&amp;#34; &amp;#34;Add event to the today&amp;#39;s journal file.&amp;#34; entry (file+headline ladicle/get-today-diary &amp;#34;Events&amp;#34;) &amp;#34;* %^T %^{Title}&amp;#34; :immediate-finish t) (&amp;#34;h&amp;#34; &amp;#34;Create a private blog post to the today&amp;#39;s journal file.&amp;#34; entry (file+headline ladicle/get-today-diary &amp;#34;Memo&amp;#34;) &amp;#34;%[~/Dropbox/org/capture_templates/hugo_post.org]&amp;#34; :jump-to-captured t) (&amp;#34;i&amp;#34; &amp;#34;Add a task to inbox.</description></item><item><title>DAPとdlvでデバッグする</title><link>https://ladicle.com/post/20200531_142049/</link><pubDate>Sat, 11 Jul 2020 23:24:04 +0900</pubDate><guid>https://ladicle.com/post/20200531_142049/</guid><description>LSPについての記事は多いがDAPについての記事が少ないのでまとめておく。 delveコマンドのほうができることは多いが、気軽に起動したいときにはエディタからの方が楽に操作できる。 (dap-modeのGo担当なので何かあれば連絡して欲しい。)</description></item><item><title>独自URL Schemeの追加と、そのハンドラの実装</title><link>https://ladicle.com/post/20200627_182059/</link><pubDate>Sun, 28 Jun 2020 14:08:10 +0900</pubDate><guid>https://ladicle.com/post/20200627_182059/</guid><description>Table of Contents 独自URL Schemeの追加 TIPS Macアプリの簡単なアイコン変更方法 go-scheme-handlerの実装 独自Scheme利用した編集ボタンをつける TIPS Chromeの確認ダイアログを初回のみ表示させる URLには https:// Schemeを利用することが多いが、 mailto: file: のように他にもいろいろなScheme1がある。 また、macOS標準のScheme以外にも独自URL Schemeを追加するアプリケーションも存在する(e.g. org-protocol:)2。 では、これらアプリケーションはどのように登録しているのだろうか?
独自URL Schemeの追加 Figure 1: 独自Schemeを利用したブログの編集ボタン
独自URL Schemeは、Script Editorで作成したApplicationを適宜変更していくと楽に追加できる。 また、URLのハンドリング部分を全てAppleScriptで書いてもいいが、慣れていないので今後のメンテナンスを考えGoで実装したhandlerを呼び出すことにした。
ここでは例として、 go://journal/&amp;lt;date&amp;gt; 形式のリンクを踏むと該当する日記をEmacsで開くものを実装する。 まずはScriptEditorを起動して新規ファイルを作成し、ドキュメント3見つつCode 1のスクリプトを書いた。
on gohandler(input) do shell script &amp;#34;/Applications/GoHandler.app/Contents/MacOS/bin/go-scheme-handler &amp;#34; &amp;amp; (quoted form of input) end gohandler on open location input gohandler(input) end open location display dialog &amp;#34;GoHandler handles URL with the `go:` scheme :)&amp;#34; Code 1: go://.</description></item></channel></rss>