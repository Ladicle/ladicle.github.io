<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ladicle</title><link>https://ladicle.com/</link><description>Recent content on Ladicle</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 31 Dec 2022 16:50:00 +0900</lastBuildDate><atom:link href="https://ladicle.com/index.xml" rel="self" type="application/rss+xml"/><item><title>2022年ふり返り</title><link>https://ladicle.com/post/look-back-2022/</link><pubDate>Sat, 31 Dec 2022 16:50:00 +0900</pubDate><guid>https://ladicle.com/post/look-back-2022/</guid><description>みなさま2022年もありがとうございました! 今年は本当に色々な方に助けられました。2023年も引き続き宜しくお願いします 🙌
仕事・転職 去年末からZ Labの認証基盤のチームに移動していました。久しぶりにコンテナから離れてVMと戯れていましたが、Ansible時代ぶりだったので初Terraformしたり一周回って新鮮でした。
9月には個人事業主としてCloudNatixというUSのスタートアップに転職し、再びk8sのコントローラ書いたりと基盤開発に戻りました。前々職、前職共にOpenStackベースのオンプレ環境だったので、なんだかんだAWSといったパブリッククラウドを仕事で使うのは初です。また、前職と比較的同じ領域なものの課題は大きくことなるので楽しかったです。
働き方は引き続きフルリモートなので大きな変化はなく、時差の関係で少しだけ朝方になったくらいです。英語は&amp;hellip;今年もうちょい精進します。
アウトプット 今年といっていいのか微妙なところですが&amp;hellip;LinuxブートキャンプというSoftware Designの別冊本が出版されました。3章のUnixネットワーク編に私の記事も再録されています。
イベント関連は、引き続きKubernetes Meetup Tokyoの運営、k8s変更点調査のSIG-APIを担当しました。単発では、TechFeed Experts Night#7 〜 コンテナ技術を語るで登壇しました。
競プロ 半年間、前前職のメンバと週1で前週のAtCoder ABCの内容を復習していました。皆でワイワイしながら複数の解法や実装方法について話せるのが楽しかったです。会のコンセプト通り緑色になれて嬉しかったです。
また、2018年ぶりの競プロでしたが、当時にくらべると全体のレベルが上がっているのを感じました。若い人の優秀さを肌でかんじつつ、何もしていないとランクが下がっていくのが刺激的でモチベが上りました。
生活・買い物 ベストDIYは数ヶ月かかった玄関タイルの張り替えです。我ながら、タイルのコーキングが満足いく仕上がりになり、玄関に愛着がわきました。
謎の流でNHKおはよう日本の取材が自宅にくることになり、ozaさんが調理したぬか漬けを食べる役をやりました。プロの機材とカメラワークによっていつものキッチンがお料理番組の絵になったのが面白かったです。
買って良かったものは洗剤自動投入のドラム式洗濯機、コマンダンテ、ヘッドスパマシン、Studio Display 5K、Xiaomi モニタライト、Stream Deck、AirPods Pro2です。
これから 少し余裕も出てきたのでOSSや登壇も再開していく予定です(そろそろオフラインイベントにも参加したい)。RustはCLIくらいしか作れなかったのでもうちょい踏み込んでいきたいです。
仕事以外だと筋トレ継続しつつ、理想をいえばちょっと走れるようになりたいところ。小型船舶のライセンスも取れたらいいな。</description></item><item><title>Linuxブートキャンプ, 2022</title><link>https://ladicle.com/activity/publications/linux-bootcamp/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/publications/linux-bootcamp/</guid><description/></item><item><title>飲みもの 2021</title><link>https://ladicle.com/post/drink-2021/</link><pubDate>Fri, 31 Dec 2021 18:08:00 +0900</pubDate><guid>https://ladicle.com/post/drink-2021/</guid><description>2021年、引っ越しの関係で買って良かったモノがありすぎたので飲みものに絞ってみる。 在宅勤務が始まり、外食が多かった生活から一転、3食自炊ついでに飲みものも色々手を出すようになった。 ちなみに、飲みものの淹れ方は全てYouTubeで学んだ(便利! 珈琲 昔カフェイン錠剤にハマってカフェイン中毒になったこともあり、 朝起きて10時くらいに1杯ノーマル珈琲、午後にデカフェを1杯飲むのがスタンダード。
ドリップ珈琲 マシン使ってた時期もあったけど最終的にハンドドリップに収束した。 ドリップ中は無になれるので仕事休憩に最適。
Figure 1: ドリップスタンドと珈琲とおやつ
珈琲豆 コスパ重視で加藤コーヒ ノーマル: (200g×3袋)9種類の珈琲豆から3袋をまとめ買い 色々選べるけどグァテマラ飲んでる率が高い デカフェ: (200gx4袋)眠れる珈琲コロンビアスペシャル デカフェ苦手だったけどここのはかなり好み コーヒーミル Kalita 電動ミル CM-50 ブラック Kalita Next Gが欲しかったけど、デカいし高いので見送り 安いしどうかなと思ったけど挽いた豆買うより圧倒的に旨いので満足 使い方も手軽で、2人分で8秒くらいで挽いて、ドリッパーの上でひっくり返すだけ 静電気問題はRoss Droplet Technique 1のおかげで解決した 箸を一本蛇口で濡らして挽く前にぐるぐるしている ミルに残ったカスもティッシュで軽く拭くだけで取れるので後片付けも簡単 ドリップスタンド&amp;amp;ドリッパー KINTO SCS-S04 ブリューワースタンドセット 4cups 普段は2人分しか淹れないが、豆の膨らみによってはギリとのことで4cupsの方を買った おしゃれだけなのでは? スタンド不要では? とか思って躊躇してた時期も会ったけど1年近く毎日使っていて大満足 食洗機にそのまま突っ込めるのもポイント ドリッパーは評判の良いV60も買ってみたが私のスキルだとうまく淹れられなかった フィルタ HARIO V60ペーパーフィルター 4cups 500枚入り ホワイト KINTOより安くて手軽に手に入るのでこっちを使ってる ドリッパよりちょい大きめだけど深めに折れば問題なし フィルタスタンド ペーパーホルダー収納ラック V60 (Stainless Steel) もう売ってなかったけどこれを使っている 自立形 &amp;amp; V60に対応しているモノが意外と少なかった ケトル BALMUDA The Pot K02A-BK 邪魔にならないデザイン &amp;amp; ドリップしやすい点は満足してる 色々な飲みものに手を出しているので温度調節できる方が良かったかも(?</description></item><item><title>ポスト通知できなかったTWELITEをドアセンサに転生させる</title><link>https://ladicle.com/post/20210117_103157/</link><pubDate>Fri, 22 Jan 2021 22:51:11 +0900</pubDate><guid>https://ladicle.com/post/20210117_103157/</guid><description>家からでなさすぎて、マンションの1Fに降りてポストを確認するのすら面倒になってしまった。が、重要書類を見落とさないよう何か投函されたらよしなに通知して欲しい。
距離的に部屋のWiFiはつかめないのでCellularかなと考えていたところ、LoRa案をもらった。各種無線の距離の比較を見ていたところ、家に転がっているTWELITE Cue REDも10~100mで、理論的には範囲内だった。
家からでなさすぎて, ポストにも宅配ボックス同様に通知が欲しくなってきた。さすがにロビーまでWiFi飛ばせないからcellularかな...
&amp;mdash; ladicle (@Ladicle) January 5, 2021 試した結果は、家の中は問題なかったものの玄関のドアを抜けてすぐロストした。流石に共用部には中継機をに撒けないので、おとなしく室内のドアセンサに転用する。(ボタン電池だけで数年持つ &amp;amp; 市販品より小型なのがすばらし)
ちなみに&amp;hellip;技適通ってるLoRaモジュールは、良さげなやつがComming Soonになってたのでそれが出たら再挑戦したい。
使用したデバイス TWELITE CUE RED1: 約3x3cmと超小型。 デフォルトアプリが書き込まれているため、電子工作せずに即遊べる MONOSTICK: PCに挿してTWELITE CUEのデータを受信したり、書き換えたりするもの Amazonで買った:
OTAで開閉センサモードに書き換える TWELITE CUEのデフォルトAPPでは磁気センサと加速度センサ両方の情報が送られている。このままでも開閉センサとして利用できるが、電池持ちが悪くなるので TWELITE PAL とおなじ開閉センサPALモードに書き換える。こちらのモードであれば数年は電池が持つ。
マニュアルに書かれていたURLからそれっぽいドキュメントを探すもののLinuxのせいか動かなかったり、古いバージョンの別サイトに置かれた方法で動かなかった1手順だけうごいたり&amp;hellip;。TWELITEはデフォルト動かすのは早いけど、他のことやろうとするとドキュメントが分散していて難しい。
TWELITE STAGE SDKのインストール TWELITE APPの設定変更はMONOSTICK経由の無線書き換え(OTA)に対応しているのでこれを利用する。 書き換えはTWELITE STAGEから行うので、TWELITE STAGE SDK &amp;gt; ダウンロード &amp;gt; Linux版をクリックする。
$ unzip MWSTAGE-2020-12_linux.zip # 詳細はINSTALLディレクトリのreadme.txt参照 $ MWSTAGE/TWELITE_Stage/INSTALL/ubuntu $ ./make_launch_icon.sh $ sudo ./set_udev_sudo.sh Code 1: TWELITE STAGE SDKのインストール これでインストールが完了するので、TWELITE STAGEを起動する。
OTA設定で子機/親機の書き換え 手順通りにやって、 電池を抜く と書き込めた (ドキュメントにはこの記載がなかった) また、そのままではデータを受信できないので親機も書き換えること。</description></item><item><title>org-captureのテンプレート ver. 2021</title><link>https://ladicle.com/post/20210120_105729/</link><pubDate>Fri, 22 Jan 2021 22:13:55 +0900</pubDate><guid>https://ladicle.com/post/20210120_105729/</guid><description>かつてのorg-rememberとか、org-captureに移行してスグぐらいの頃は機能足りなかったせいか書き換えることが多かったけど、最近はテンプレートも安定してきた。
個人メモは1ファイルに書き連ねていくよりも org-journal で日々書き捨て、読み返したいものだけ(個人&amp;amp;パブリック)ブログにエクスポート方式の相性が良かったので、org-capture templateもその日のjournalに吐き出すものが多い。
(defun ladicle/get-today-diary () (concat org-journal-dir (format-time-string &amp;#34;%Y%m%d.org&amp;#34; (current-time)))) (setq org-capture-templates &amp;#39;((&amp;#34;t&amp;#34; &amp;#34;Write down the thoughts of this moment with a timestamp.&amp;#34; entry (file+headline ladicle/get-today-diary &amp;#34;Log&amp;#34;) &amp;#34;* %T %^{Tweet}&amp;#34; :immediate-finish t) (&amp;#34;e&amp;#34; &amp;#34;Add event to the today&amp;#39;s journal file.&amp;#34; entry (file+headline ladicle/get-today-diary &amp;#34;Events&amp;#34;) &amp;#34;* %^T %^{Title}&amp;#34; :immediate-finish t) (&amp;#34;h&amp;#34; &amp;#34;Create a private blog post to the today&amp;#39;s journal file.&amp;#34; entry (file+headline ladicle/get-today-diary &amp;#34;Memo&amp;#34;) &amp;#34;%[~/Dropbox/org/capture_templates/hugo_post.org]&amp;#34; :jump-to-captured t) (&amp;#34;i&amp;#34; &amp;#34;Add a task to inbox.</description></item><item><title>2020年ふり返り</title><link>https://ladicle.com/post/20201226_214511/</link><pubDate>Sat, 26 Dec 2020 23:28:25 +0900</pubDate><guid>https://ladicle.com/post/20201226_214511/</guid><description>Figure 1: 今年の草
ほんとうに今年は色々ありすぎて3月にあったコトが数年前のことのようだ。 一年後にはみんなでビール飲めることを願いたい。
FOSDEM 2月はFOSDEMのため初めての1人海外でベルギー。そして今年最初で最後の海外。 コロナが流行り始めた頃…まだアジアンの病気だと思われていたので暴行が問題になり始めた頃。 若干不安だったが、たまに席よけられるくらいで支障はなかった。
FOSDEM自体は面白いカンファレンスだったので次は発表者としていけるようになりたい。 (ビールも飯も最高だった
3冊目の本 去年からやっていたDocker &amp;amp; Kubernetesのセキュリティ本が出版された。 FOSDEMの行き帰りの飛行機の中でもレビューした気がする。
KubeFest &amp;amp; Kubernetes Meetup Tokyo 緊急事態宣言の前、カンファレンスが中止になったり、延期になったりと各コミュニティごとに判断が委ねられた頃、 Kubernetesの1Dayイベントもオンライン開催に変更しKubeFestとして開催した。 オンライン開催の都合上CNCF公式のKubernetes Communityイベントにはならなかったが、多くの方に参加していただけて本当に良かった。
Kubernetes Meetup Tokyoの方はローカル&amp;amp;オンライン同時開催からオンラインのみになったけど、 引きつづき毎月やっていけて嬉しい。(発表者は常に募集しています!
KubeCon KubeConで初めての発表。自作ツールについて話せる機会がもらえたのは本当に嬉しかった。 (acceptメールは驚きすぎて2度見した)
現地を楽しみにしていたのでオンラインになってしまったのは残念だったが、 Slack上でフィードバックもらったり、他の発表者と交流できて楽しかった。
お家Hack 2人とも家で仕事するようになり、広さを求めて昭和な物件を購入してフルリノベした。 全て自分で設計したいという気持ちで建築・照明工学の本や図面を読み漁りつつ、昔の電気工事士のテキスト引っ張り出してきたり、 リフォーム産業新聞読んだり、図面書いたり、3Dモデル作ったりして希望通りのものを工務店の人に工事してもらった。 トラブルも多発するし、全てを自分で決めるのは想像以上に大変で、時間も無限に吸われていったが、諸々自動化されて暮らしは快適になったので結果オーライ。
今年は人生で一番Lifeに時間を使った感じがある。
英語 Figure 4: TOEIC
コロナ渦でTOEICがオンラインでも受けられると聞き、久しぶりに試験を受けた。 TOEIC対策はできなかったが、前回から100弱くらい上がってついに800台にのってよかった。 人としゃべる機会が減って癒やしとなったCambly(オンライン英会話)のおかげだと思う。
Web連載記事 会社のメンバーと書いた記事。私はKubernetes上のアプリケーション開発を加速させるツール(Skaffold &amp;amp; Telepresence)について2本書いた。
https://thinkit.co.jp/article/17553 https://thinkit.co.jp/article/17853 その他 今年もAdvent Calendarを書いた。(Z Labのも初めて?全日埋まって嬉しい) また直近ではGoogle’s Tech Elevateに参加していた。4週目あたりは引っ越しとかぶってしまったので残念。 DIY, Oculus Quest(Beat Saber)&amp;hellip; 特にSwitch(リングフィット/ZUMBA)のおかげで引きこもりながらも運動できているので任天堂さまさま。 あと冷え性が突然なおった。
来年もやっていきたい。良いお年を!
(年末は引きこもって呑みます</description></item><item><title>Think Design About Pretty kubectl Plugins</title><link>https://ladicle.com/activity/talks/kubecon_euro_2020/</link><pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/talks/kubecon_euro_2020/</guid><description> Links KubeCon+CloudNativeCon Europe 2020: https://kccnceu20.sched.com/event/Zeq0</description></item><item><title>DAPとdlvでデバッグする</title><link>https://ladicle.com/post/20200531_142049/</link><pubDate>Sat, 11 Jul 2020 23:24:04 +0900</pubDate><guid>https://ladicle.com/post/20200531_142049/</guid><description>LSPについての記事は多いがDAPについての記事が少ないのでまとめておく。 delveコマンドのほうができることは多いが、気軽に起動したいときにはエディタからの方が楽に操作できる。 (dap-modeのGo担当なので何かあれば連絡して欲しい。)</description></item><item><title>独自URL Schemeの追加と、そのハンドラの実装</title><link>https://ladicle.com/post/20200627_182059/</link><pubDate>Sun, 28 Jun 2020 14:08:10 +0900</pubDate><guid>https://ladicle.com/post/20200627_182059/</guid><description>Table of Contents 独自URL Schemeの追加 TIPS Macアプリの簡単なアイコン変更方法 go-scheme-handlerの実装 独自Scheme利用した編集ボタンをつける TIPS Chromeの確認ダイアログを初回のみ表示させる URLには https:// Schemeを利用することが多いが、 mailto: file: のように他にもいろいろなScheme1がある。 また、macOS標準のScheme以外にも独自URL Schemeを追加するアプリケーションも存在する(e.g. org-protocol:)2。 では、これらアプリケーションはどのように登録しているのだろうか?
独自URL Schemeの追加 Figure 1: 独自Schemeを利用したブログの編集ボタン
独自URL Schemeは、Script Editorで作成したApplicationを適宜変更していくと楽に追加できる。 また、URLのハンドリング部分を全てAppleScriptで書いてもいいが、慣れていないので今後のメンテナンスを考えGoで実装したhandlerを呼び出すことにした。
ここでは例として、 go://journal/&amp;lt;date&amp;gt; 形式のリンクを踏むと該当する日記をEmacsで開くものを実装する。 まずはScriptEditorを起動して新規ファイルを作成し、ドキュメント3見つつCode 1のスクリプトを書いた。
on gohandler(input) do shell script &amp;#34;/Applications/GoHandler.app/Contents/MacOS/bin/go-scheme-handler &amp;#34; &amp;amp; (quoted form of input) end gohandler on open location input gohandler(input) end open location display dialog &amp;#34;GoHandler handles URL with the `go:` scheme :)&amp;#34; Code 1: go://.</description></item><item><title>コードリーティングの記録とOrg Capture</title><link>https://ladicle.com/post/20200625_123915/</link><pubDate>Thu, 25 Jun 2020 21:37:29 +0900</pubDate><guid>https://ladicle.com/post/20200625_123915/</guid><description>Table of Contents org-captureで楽をする 各種ソースコードホスティングサービスのリンクを取得 他の人にシュッと共有する 人間忘れるものなので、コードリーディングする時はorg-modeでメモをとっている。 このメモを取る時なのだけど、単純に文章だけだと後から追いづらい。 なので、気になった箇所は文章と共にファイルリンク1とGitHubへのリンクもセットで記録している。
Code Reading コードリーディングについては &amp;ldquo;Code Reading―オープンソースから学ぶソフトウェア開発技法&amp;rdquo; がおすすめ。 今でこそ慣れたが、はじめはOpenStackとかKubernetesとか大規模なソースコードを読むのに苦戦した。 感覚で改善してしまったが、この本ではその普段何となくやっていたことがうまく言語化されている点が良かった。
org-captureで楽をする メモと共にリンクを記録しているといったが、流石にファイルパス・行番号・コミットハッシュ・GitHubリンクを手動で調べて挿入するのでは面倒すぎる。 そこで、org-captureを使ってカーソル位置の情報をメモ帳の指定した位置に挿入している。
Your browser does not support the video tag. Video 1: org-captureでコードのリンクをメモに挿入する例 実際の設定はこんな感じ。org-captureの (function) オプションを利用して書き込み先のバッファとカーソル位置を選択、 書き込み先のサブツリーは事前に (org-code-capture--store-here) でマークしておく。
ファイルリンクをコメントアウトしているのは、外部に公開するときはローカルのファイルパスを公開しても意味がないため。 ローカルではコメントアウトされたリンクでもジャンプできるので問題なし。
(defconst ladicle/org-journal-dir &amp;#34;~/Dropbox/org/journal/&amp;#34;) (defconst ladicle/org-journal-file-format (concat ladicle/org-journal-dir &amp;#34;%Y%m%d.org&amp;#34;)) (defvar org-code-capture--store-file &amp;#34;&amp;#34;) (defvar org-code-capture--store-header &amp;#34;&amp;#34;) ;; This function is used in combination with a coding template of org-capture. (defun org-code-capture--store-here () &amp;#34;Register current subtree as a capture point.</description></item><item><title>HugoでもTwitterCard画像を自動生成したい</title><link>https://ladicle.com/post/20200623_164459/</link><pubDate>Tue, 23 Jun 2020 14:59:00 +0900</pubDate><guid>https://ladicle.com/post/20200623_164459/</guid><description>Table of Contents どう生成するか考える GoでTwitterCardを生成する カスタマイズのしやすさ フォント、禁則処理、座標計算 etc. 更新のあった記事を対象に生成する HugoにTwitterCard(&amp;amp;OGP)情報を設定する キャッシュ対策 最近、Twitterを眺めているとイイ感じのサムネが設定されたブログ記事を見かけるようになった。 OGP1やTwitterCardl2にはそのような生成機能が無いので各々画像を生成しているのだと思われるが、 Hugoにもそのような機能は無い。ということで、この土日にGoで画像生成するコマンドを書いた。
どう生成するか考える Hugoは静的サイトジェネレータなので、一般的なブログサービスのように動的なことは考えず、 単純にサイト生成時に画像も生成すれば良いだろう。
では、どう生成すべきか？ImageMagicを使う方法や、Hugoでサムネ用ページを生成しそれをCode 1のように Headless Chrome を使ってスクショを撮る方法が考えられる。しかし、サムネをスクショするだけに起動するには少々重い。
docker run --rm -u $(id -u $USER) --cap-add=SYS_ADMIN --name capture -v $PWD:/workdir -w /workdir \ justinribeiro/chrome-headless \ --window-size=1200,628 \ --headless \ --disable-gpu \ --screenshot http://path.to/capture/target Code 1: Headless Chromeを使ってスクリーンショットを生成する例 このサイトを生成しているGitHub Actionでも動くような、軽量でポータブルなものが欲しい。 ということで、GoでHugoの記事からサムネ画像生成するCLIを作ることにした。
GoでTwitterCardを生成する コードを書く前に、実際のHugoページのメタ情報(FrontMatter)を使って、 「見やすくてポップな感じのTwitterCardが欲しい」 という自分のオーダに沿った最終形態をイメージした。 ここでKeynoteで下書きしたのは正解で、Goから実際に描画するときに左上からの座標やフォントサイズ、Hex Colorなどの取得に便利だった。
Figure 1: KeynoteでTwitterCardの最終形態をデザインする
カスタマイズのしやすさ 最終形態をイメージできたので、実際に実装していく。 今後のTwitterCardの仕様変更やデザインを変えたくなった時のことを考えて、なるべくカスタマイズしやすいCLIを考えてみる。
表示したい項目(titleやtagなど)は今後変わらなそうなので固定、サイト全体で共通な背景画像はKeynoteなどの編集ツールで修正できる方が楽なのでテンプレとして読み込む。 テンプレートと合わせて変更したくなるテキストの位置やサイズ、色はパラメータで調整できると便利そうだ。
ただし、可変値のすべてをCLIのフラグや引数で指定するのは大変なのでなるべくデフォルト値を提供した上で、変更したい時だけ設定ファイルから変更を可能にしたい。 そんなこんなを検討した結果が tcardgen 。リポジトリはGitHubで公開している。</description></item><item><title>iPadで作図しMacでいい感じにメモる</title><link>https://ladicle.com/post/20200617_130952/</link><pubDate>Fri, 12 Jun 2020 08:40:00 +0900</pubDate><guid>https://ladicle.com/post/20200617_130952/</guid><description>Table of Contents 今までの連携方法 Catalinaの機能を利用した連携 Notes以外でも連携したい 実際の設定 既存の図にチョイ足しする コード書いたり読んだりするのはMacでやったほうが楽だし、図を書いたりするのはiPadが楽。ということでこの間をいい感じに繋いだ話。
今までの連携方法 今までは以下の手順で連携していた。それなりに面倒なので、気軽に図を書いて差し込むという気になれなかった。
iPadのPaperというアプリで図を書く ShareからAirDropを使ってファイルを転送 (ほとんどの場合キャンバスサイズいっぱいに図を書かないので)Previewで画像の切り出し メモ先(Emacs)にドラッグ&amp;amp;ドロップ Catalinaの機能を利用した連携 macOS CatalinaからMacとiPadを連携させるSidecarと共に、MacとiOS1を連携するいくつかの便利機能が入った。 いずれもMac側から実行するとiPadのアプリが自動で起動する。そしてiPad側で編集が完了すると、Mac側にその結果が反映されるという動き。
NotesへiPadから写真/ドキュメント/図/を挿入 公式メモアプリのNotes2で 右クリック &amp;gt; insert from iPhone or iPad &amp;gt; Take Photo/Scan Document/Add sketch 画像/PDFにiPadで書き込み Finderから画像/PDFを 右クリック &amp;gt; Quick Action &amp;gt; Markup Notes以外でも連携したい Figure 1: Integration Flow
公式の機能も便利なんだけど、Notesだけだとコードのシンタックスハイライトとか機能が無さすぎるので常用できない。(つまりEmacs org-mode3つかいたい) また、iPadでの作図もPaper4というアプリが使いやすいのでこれを使いたい。何か良い方法がないかと考えていると、Appleデバイス間のクリップボード同期機能 を思い出した。
クリップボードを利用すれば、アプリケーションに縛られることなくiPad&amp;lt;-&amp;gt;Mac間で連携できる。非常に便利5。
iPadのPaperで図を書く ShareからCopyを選択 MacのEmacsでペースト(ペースト時にhookして画像のみ書き込み部分をCrop) 実際の設定 Clipboardから画像を生成するところはpngpaste6、そして画像の余白自動切り抜きはImageMagicのmogrifyを利用している。 メイン処理自体はShellScriptなのでどのエディタからも同じように利用できるはずだ。
(defun org-insert-clipboard-image () &amp;#34;Generate png file from a clipboard image and insert a link with caption and org-download tag to current buffer.</description></item><item><title>Docker/Kubernetes開発・運用のためのセキュリティ実践ガイド</title><link>https://ladicle.com/activity/publications/dockersec/</link><pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/publications/dockersec/</guid><description>Links Mynavi.jp: https://book.mynavi.jp/ec/products/detail/id=114099 Store(Amazon.co.jp): https://www.amazon.co.jp/dp/B085C8LYDC/ref=cm_sw_r_cp_awdb_c_GllGEbTQS2AW3</description></item><item><title>外出先でも快適なお家k8sクラスタを構築する</title><link>https://ladicle.com/post/k8s-home-cluster/</link><pubDate>Mon, 26 Aug 2019 21:56:24 +0900</pubDate><guid>https://ladicle.com/post/k8s-home-cluster/</guid><description>Table of Contents 1 なぜお家Kubernetesクラスタか 2 Workerのハードウェア構成と価格 3 マシンにUbuntuサーバをインストールする 3.1 Live USBの作成 3.2 インストーラの進化 3.3 LVMのディスク容量を増やす 4 Kubernetesの構成検討と構築 4.1 cri-oのセットアップ 4.2 kubeadmによるクラスタ構築 4.2.1 事前準備 4.2.2 Master/Workerの構築 4.3 ciliumのCNIプラグインを適用する 4.4 MetalLBの構築 5 CloudflareのArgo経由でSSHする 5.1 Server設定 5.2 Client設定 5.3 Cloudflare Accessでアクセスユーザを制限する 6 kubeadmによるクラスタアップグレード 6.1 CNIプラグインのアップグレード 1 なぜお家Kubernetesクラスタか なんでもクラウドサービスな時代だが、やはりそれなりのスペックを求めるとそれなりのお値段になってしまう。また、サービスによっては下回りの構成変更の柔軟性や新機能が利用できるようになるまでラグもサービスに依存する。そんな状況を鑑みると、実験場として請求書に怯えることなく使えるお家クラスタが欲しくなってくるものだ。
2 Workerのハードウェア構成と価格 Figure 1: (左): 届いたパーツ群、(右): 配線が完了したNUC
Master用のNUCは自宅のものを再利用したため、ここには含まれていない。こちらのスペックは数世代前のi5 NUCで32GBメモリ、2TBのディスクを積んでいる。メモリが市場に溢れてる今が買い時ということで8GBと悩んだ結果16GBにした。ツクモで全て買おうとしていたが購入制限に引っかかったので1台だけソフマップとなっている。また、スイッチのポートも足りなくなってきたので一緒に購入した(最近のNETGEARは謎にスマホアプリから設定変更や状態確認ができて面白い。
Table 1: パーツと価格 Shop Item Price(JPY) Number Total(JPY) TSUKUMO NUC8I3BEH (BOXNUC8I3BEH) 35,366 2 70,732 CT2K8G4SFS824A (Crucial 16GB:8GBx2) 11,858 3 35,574 WDS500G2B0B (WD 500GB SSD) 6,980 3 20,940 Sofmap NUC8I3BEH (BOXNUC8I3BEH) 35,366 1 35,366 Amazon GS105E-200JPS (NETGEAR Switching Hub 5port) 3,570 1 3,570 BSACC0802BKA (BUFFALO power cable 3pin/2pin plug) 482 3 1,446 Yodobashi LA-SL6-005BK (SANWA SUPPLY CAT6 LAN cable 0.</description></item><item><title>Kubernetesを拡張して日々のオペレーションを自動化する</title><link>https://ladicle.com/activity/talks/cndt2019/</link><pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/talks/cndt2019/</guid><description> Links Slide: https://speakerdeck.com/ladicle/kuberneteswokuo-zhang-siteri-falseoperesiyonwozi-dong-hua-suru Event: https://cloudnativedays.jp/cndt2019/</description></item><item><title>みんなのDocker/Kubernetes</title><link>https://ladicle.com/activity/publications/mink8s/</link><pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/publications/mink8s/</guid><description>Links Gihyo.jp: https://gihyo.jp/book/2019/978-4-297-10461-0 Store(Amazon.co.jp): http://www.amazon.co.jp/o/ASIN/429710461X/gihyojp-22</description></item><item><title>Ladicle's Emacs Configuration</title><link>https://ladicle.com/post/config/</link><pubDate>Wed, 17 Apr 2019 16:46:00 +0900</pubDate><guid>https://ladicle.com/post/config/</guid><description>Latest version is here. Go Ladicle&amp;rsquo;s Emacs Configuration ver. 2022!
Table of Contents 1 Configuration 1.1 Table of Contents:TOC_3_gh: 1.2 ScreenShot 1.3 Load Path 1.4 Generic 1.4.1 Server 1.4.2 Editing 1.4.3 Smartparens 1.4.4 History 1.4.5 GUI/Font 1.4.6 OS 1.4.7 Icons 1.4.8 posframe 1.4.9 point 1.5 Key-bindings 1.5.1 Mouse 1.5.2 Custom Maps 1.5.3 Global 1.5.4 which-key 1.5.5 Hydra 1.6 Undo/Redo 1.7 Search/Replace 1.7.1 Projectile 1.7.2 Wgrep 1.7.3 Ag 1.7.4 Ivy 1.</description></item><item><title>Integrate with Tracing and Logging</title><link>https://ladicle.com/activity/talks/opencensus201904/</link><pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/talks/opencensus201904/</guid><description> Links Slide: https://speakerdeck.com/ladicle/integration-with-tracing-and-logging Event: https://opencensus.connpass.com/event/123885/</description></item><item><title>Kubernetes実践入門</title><link>https://ladicle.com/activity/publications/practical-k8s/</link><pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/publications/practical-k8s/</guid><description>Links Gihyo.jp: https://gihyo.jp/book/2019/978-4-297-10438-2 Store(Amazon.co.jp): http://www.amazon.co.jp/o/ASIN/4297104385/gihyojp-22</description></item><item><title>ox-Hugo Cheat Sheet</title><link>https://ladicle.com/post/ox-hugo-cheat/</link><pubDate>Wed, 16 Jan 2019 14:51:27 +0900</pubDate><guid>https://ladicle.com/post/ox-hugo-cheat/</guid><description>Table of Contents 1 図、表、コードの導入と参照 1.1 図のAMP対応 1.2 Chromaによるシンタックスハイライト 2 Subtreeのプロパティと各種機能 [50%] 2.1 TODO DraftフラグをTODOタグで切り替える 2.2 DONE プロパティによる目次とHUGOの制御 3 文字スタイルとHTML 3.1 Markdownに変換されるスタイル一覧 3.2 引用する 3.3 HTMLの制御とNoteブロックの追加 3.4 リスト一覧 4 LaTex数式を埋め込む 5 org-babelによるコードブロックの評価 5.1 Graphviz, PlantUML, ditaaを使ったの出力 5.2 R x ggplot2 によるSVG形式のグラフ出力 6 参考文献 1 図、表、コードの導入と参照 画像や、テーブルはキャプションを付けたり、Code 1のように参照することができる。参照したい名前を #+NAME: &amp;lt;name&amp;gt; に設定すると、通常のorgリンクを使って [[&amp;lt;name&amp;gt;]] で参照できる。デフォルトでは、参照時に番号のみ表示されるが、Code 2のように変数を設定すると識別子まで展開することができる。
(setq org-blackfriday--org-element-string &amp;#39;((src-block . &amp;#34;Code&amp;#34;) (table . &amp;#34;表&amp;#34;) (figure . &amp;#34;Figure&amp;#34;))) Code 1: 識別子名の設定 また、Code 1のように識別子のカスタマイズも可能だ。他にも識別子を変更する方法がある。それは、言語設定をすることだ。ファイルのトップに #+language: jp のように記述すると、識別子がその言語で翻訳されて出力される。Code 2のように明示的に設定していた場合、自動翻訳は実施されない。</description></item><item><title>2018年のふり返り</title><link>https://ladicle.com/post/2018-review/</link><pubDate>Mon, 31 Dec 2018 20:51:09 +0900</pubDate><guid>https://ladicle.com/post/2018-review/</guid><description>転職して初めて迎えたこの1年は、色々なことに挑戦できたよい年だったと思う。初の海外出張ではKubeConに参加し、その後もSDCやChaosCon等に参加するため初のアメリカ上陸を果たした。シリコンバーレーではお上りさんらしくドロイド君等にはしゃぎ、食事中に車の窓ガラスが割られるなどのアメリカらしい？洗礼を受けた。
技術 転職してから仕事中はフルでコードを読んだり書いたりできるようになったので、去年と比べるとGitHubに緑がふえた。学生の頃に比べると体力の衰えを感じたので競技プログラミングをはじめたが、体調を崩し始めた5月くらいから遠のいてしまったので再開したい。
また、Ruiさんの記事を見てC言語コンパイラを作りはじめた。その過程で大学の授業の内容が頭から抜けてることに気づいたため、回路や計算機のしくみまわりの本を読み直すなどした。来年は言語処理系とOSも作ってみたというお気持ち。
仕事は引き続きKubernetes周りをやっている。前回のKubeConのKeynoteではBoringフェーズに入ったと話題になったが、普段触れているCRDまわりはまだまだBoringとは言いがたい。来年もうまく付き合っていきたい。あとはそろそろ本格的にService Meshを(ry
英語 英語は「This is a pen.」くらいしか言えなかったため、英会話(Beliz + NativeCamp Callan Method)を始めるなどの対策を取った。今年の秋頃には初の英語プレゼンをしたり、後半のカンファレンスでは多少言葉をかわせたので、成長を感じる。来年も引き続き精進したい。
生活 生活にもゆとりが出てきたため、ジムに行って筋トレマニアになってみたり、日々発展していく家の近所を探索したり、コーヒーショップを回ってノマドワーカーを気取るなどした。家は人間らしい文化的な生活をあきらめた模様替えをはたし、友人達にここオフィス？と聞かれるまでに至った。とても捗る。ただし、健康面は勢い余ってO157になってしまったので気をつけたい。(常温で放置された🍣食べるのダメ絶対
対外活動 今年はJCDでプレゼン1本＆パネルディスカッション2本、英語プレゼン1本、KubeConのRecap1本にLT1本の計6本くらいの発表をしたようだ。また、Cloud Native Deep Diveというディスカッションベースの勉強会もはじめた。来年からはKubernetes Meetup Tokyoの運営にも参加していく。それでは皆様、来年もよろしくお願いします。
Securing Clusters with Kubernetes Extensibility ISUCONでEnvoyを使えるか？ Recap SIG API Machinery Deep Dive Istioと共にMicroservicesに立ち向かえ！</description></item><item><title>Securing Clusters with Kubernetes Extensibility</title><link>https://ladicle.com/activity/talks/kcnm/</link><pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/talks/kcnm/</guid><description> Links Slide: https://speakerdeck.com/ladicle/securing-clusters-with-kubernetes-extensibility Event: https://wantedly.connpass.com/event/105371/</description></item><item><title>Linux Desktop Environment in 2018</title><link>https://ladicle.com/post/linux-desktop-2018/</link><pubDate>Thu, 02 Aug 2018 16:46:00 +0900</pubDate><guid>https://ladicle.com/post/linux-desktop-2018/</guid><description>&amp;ldquo;Linuxデスクトップ環境&amp;quot;でggrると，いろんな記事がヒットしたので触発されてみた．普段遣いをmacOSからUbuntuに移行してまだ2ヶ月といったところだけど，最初の1ヶ月に構築した環境で満足しているので暫くこのままだと思う．
なぜLinuxに移行したのか？困ってないか？ LaptopとしてXPSを選んだ理由とか，ディストリ検討の話はBye Bye Mackbook Pro. Hello, Ubntu XPS! に書いている．
困ってないか？については全く困っていない．使って微妙だった点はMacbookProに比べるとバッテリーの持ちが悪いことと1，ファンの音が特徴的できになるということくらい．
My dotfiles come out in Public しばらくdotfilesをprivateにしていたが，クローズド野郎 という煽りワードを聞いたのでLinux用の設定を追加するついでにGitHubで管理し始めた．
dotfiles: https://github.com/Ladicle/dotfiles setup-scripts: https://github.com/Ladicle/setup-tools/blob/master/linux/setup Major customizes Figure1. My Pretty Desktop
Desktop: GNOME Xorg Ubuntu 18.04からUnityからGNOMEにもどったのでデフォルトのまま．Window protocolはWaylandに一回切り替えてみたけど不安定だったのでXorgに戻した．あとは「タイル式こそ私が求めていたものでは？」と検討したものの，ターミナルを透過して後ろにブラウザ開いて何かを表示していることが多いことに気づいたため不採用．
Theme: Adapta-Eta, Papirus-Adapta Figure1の通り，Adaptaのblueテーマを使っている．ターミナルの見ため含め，かわいみがあってポップでキュートでナウい青系なもの が好み．IconはPapirusのAdaptaバージョンを使っているのだが，GoファイルがGopher君になるのがツボ．
あとは画面領域を無駄に削られたくないので，hide-top-barの拡張とか設定でDockを消したりしている．起動時は，全画面でターミナルだけ表示される．
Terminal Emulator: Tilix 同様の理由により，タブとかタイトルバーとか無駄なものをすべて消せる &amp;amp; FuraCode-Nard-Font2をつかえるものから選択した． Nard Fontというのは，プログラミング用フォントに大量のiconをパッチが提供されたもので，その中でもリガチャという文字の並びによって見た目が変わる特殊フォントを使っている．
が，しかしTilixはリガチャが使えない．キーのトランジットも設定できない のでASCIIの制御コードを外れたショートカットが使えないという問題点もある．画面分割もtmuxなのでTilixには依存しておらず，よりよいTerminalに出会ったら乗り換える予定．
Key remapper: xkb+xremap, Gesture: fusuma Key remapperは数字記号反転とかkeyboardレイアウトその変更にxkb，特定のWindow選択とかアプリごとのショートカット設定をxremapで設定している．xkbはsuspend復帰時に設定がoverrideされたりとハマったが，systemdのservice使ってhookする形に落ち着いた．
xkb &amp;amp; xremap services, suspend-hook.service xkb configuration xremap configuration TrackpadのGestureは，挙動をmacOSと揃えたくてfusumaを使っている．LaptopをクラムシェルモードにしたときはMagicPad2を使っているのだが，MagicPad2のドライバは未対応 3のため自分でパッチを当てる必要がある．magictrackpad2-dkmsは先日のアプデで動かなくなったので直さないとなーというステータス．
Misc 日本語入力: ibus-mozcを使っているが，google/mozc#381にあるとおり，デフォルト入力ソースを設定から変更できないため，デフォルトをHIRAGANAに変更したものをパッチして使っている．</description></item><item><title>Bye Bye Mackbook Pro. Hello, Ubntu XPS!</title><link>https://ladicle.com/post/ubntun-install-into-xps/</link><pubDate>Sat, 09 Jun 2018 16:46:00 +0900</pubDate><guid>https://ladicle.com/post/ubntun-install-into-xps/</guid><description>最近コンテナ周りの開発をしているせいかMacbookでDockerとかVM経由してLinuxで作業する機会が多い. Proの性能がなかなか上がらないのもあって普段使いのlaptopをDell XPS 13(9370)に移行した.
他に検討したモデル Core i7 8th, 13 inch, 16GB memory, 500 GB~ disk, ~1.3kg は必須，4K displayであればなおよしという条件で探していた.
ThinkPad: 赤ポチが好きだったので再び(ry と思ったものの，フルスペックにすると高かったので却下． HUAWEI MateBook X Pro: Macbookを意識しているのが感じられるlaptop. 軽さ, 性能, バッテリーの持ちが一番よかった．発売前で詳細がわからず見送り． HP Spectre Notebook: 性能も価格もXPSと一致してたので一番まよった. デザインが僅かにXPSのほうがこのみだったのでやめた． ディストリビューションの検討 Desktop版のLinuxを使うのは高校生ぶり, その頃はUbuntuが入れようにもPCの性能足りなくてもっさりしてたため軽さ重視だった. もう時代が違うし流行りもわからんということで, Linux使ってる周りの人に聞いてみた. Gentoo，Arch，Ubuntuが候補に上がったが，PCとの相性1とセットアップの楽さでUbuntuに決定．
Ubuntu 18.04のインストール BIOS設定の変更 BIOSに入るのはF2
SATA Controller: RAID -&amp;gt; AHCI Windows Boot Manager: disable Secure Boot: disable USBからンストール Boot deviceの変更はF12
16.04の時は無線に繋がらなかったりTouch panelの動作がおかしかったようだったが, 18.04は何も困らなかった2. Touch panelのカーソル移動はもっさりなので速度を最高まであげるとよい感じ.
参考リンク Dell XPS 13 (9370) に Ubuntu 16.</description></item><item><title>Supporting AMP for Hugo templates</title><link>https://ladicle.com/post/support-amp/</link><pubDate>Wed, 06 Jun 2018 19:41:39 +0900</pubDate><guid>https://ladicle.com/post/support-amp/</guid><description>Istio v0.8がリリースされたので更新内容についての記事を書こうとしていたら，いつのまにかテンプレートのAMP対応をしていた．
作業の流れ ざっと公式ページを見る ひたすら使えないタグやjsをampに対応したものに置き換える chromeのアドレスバーに#development=1を追加してconsoleにvalidation errorが出ていないかチェック ひたすら直す 変えたポイント amp用の識別子たちを追加 cssファイルをconvertしてhtmlに吐き出し jsを全て取り払う hilightjsはgist pluginに変更 menuはsidebar, accordion pluginに変更 jump to top buttonはanimation, position pluginに変更 disqusをiframeに変更 (まだ表示されない原因が分からない imgタグをamp-imgに変換 所感 テンプレは3つだけなので，思っていたよりは楽だった．しかしページ数が多かったり，jsを使ったスタイリッシュなサイトは辛そうだなという感じ．表示は以前より大幅に早くなったのでしあわせ．ページごとのmeta情報の生成は面倒でやっていない．
references https://www.ampproject.org/ https://www.ampstart.com</description></item><item><title>Istioと共にMicroservicesに立ち向かえ!</title><link>https://ladicle.com/activity/talks/jkd1804/</link><pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/talks/jkd1804/</guid><description> I&amp;rsquo;ve developed and operated Microservices over 3 years, and they are gradually larger and more complexity. Managing those microservices is difficult. Istio is a great product! Because it can solve many problems that I faced.
Links Slide: https://speakerdeck.com/ladicle/istiotogong-nimaikurosabisunili-tixiang-kae Event: https://containerdays.jp</description></item><item><title>about</title><link>https://ladicle.com/about/</link><pubDate>Sat, 06 Jan 2018 21:04:38 +0900</pubDate><guid>https://ladicle.com/about/</guid><description>8 years software engineer with an experience. Researched and developed highly scalable Container Platform based on Kubernetes.
Key programming language skill is Go, Python and Java.
My interesting things are operating system and distributed system design.</description></item><item><title>Setting up the Mistel BAROCCO</title><link>https://ladicle.com/post/mistel-barroco/</link><pubDate>Tue, 28 Nov 2017 16:46:00 +0900</pubDate><guid>https://ladicle.com/post/mistel-barroco/</guid><description>Refalforce派だったが，親指をもうちょっと有効に使いたかったのと健康のため分割キーボードに乗り換えることにした．Topreが分割キーボードを出していればそれで解決だったのだが，まだないので泣く泣く他の選択肢を模索．最終的にコンパクトかつ普通のキーボドに配列が近いMistel BAROCCO RGB White (US)を選択した．
My keyboard layout Figure1. custom keyboard layout
図1は現在使っているkeyboard layoutなのだが，緑色がBAROCCOのプログラム機能を使ってRemapしているキーで，黄色1はxkbでRemapしているキーを示している．BAROCCOのプログラム機能では一部のキーに制約があるため，このような形に落ち着いた．
Upgrade a firmware ファームウェアが公式ページからダウンロードできる．最新のFirmwareは2018/01/08にリリースされた． USB抜くとRemap内容が消えてしまうみたいなバグが治るので基本的2には適用したほうが良い
Remap the keyboard layout Remmap方法は説明書に乗っているがPDF or 紙媒体しかなく不便なのでメモ．
Normal keys Press the Fn + Ctrl Right Press a remapped key Program new values // locked keys are not lighting Press the PN Remap FN and PN keys Press the Fn/PN + Left Shift for 3s Press the Fn/PN key Choose a new position on the keyboard // locked positions are not lighting Change the back light color and style RBGエディションを購入したのでけたましく光らせることができる3．PNをベースに，全体のスタイルの変更は5, キーごとに設定したい場合は9，どちらもEscからカラーパレットが使用できる．</description></item><item><title>Software Design September, 2017</title><link>https://ladicle.com/activity/publications/sd201709/</link><pubDate>Fri, 18 Aug 2017 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/publications/sd201709/</guid><description>Links Software Design: http://gihyo.jp/magazine/SD/archive/2017/201709 Store(Amazon.co.jp): https://www.amazon.co.jp/o/ASIN/B072RC11J4/gihyojp-22</description></item><item><title>Mastodon on Kubernetes</title><link>https://ladicle.com/activity/talks/k8s-meetup4/</link><pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/talks/k8s-meetup4/</guid><description> I start to operate Mastdon on my home Kubernetes cluster. Mastdon is a twitter like social networking service. I talked about how to deploy it on the cluster, and how to use Services, PersistentVolumes, CronJobs, and Deployments.
Links Slide: https://speakerdeck.com/ladicle/mastodon-on-kubernetes Event: https://k8sjp.connpass.com/event/53737/ Video: https://youtu.be/GlbPk0mHgcs?t=2h13m52s Code: https://github.com/Ladicle/mastodon-chart</description></item><item><title>Software Design May, 2017</title><link>https://ladicle.com/activity/publications/sd201704/</link><pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/publications/sd201704/</guid><description>Links Software Design: http://gihyo.jp/magazine/SD/archive/2017/201705 Store (Amazon.co.jp): http://www.amazon.co.jp/o/ASIN/B01N2627HG/gihyojp-22</description></item><item><title>Monitoring k8s with Prometheus</title><link>https://ladicle.com/activity/talks/prom-meetup1/</link><pubDate>Wed, 12 Apr 2017 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/talks/prom-meetup1/</guid><description> Links Slide: https://speakerdeck.com/ladicle/monitoring-kubernetes-with-prometheus Event: https://prometheus.connpass.com/event/53894/</description></item><item><title>Software Design November, 2016</title><link>https://ladicle.com/activity/publications/sd201611/</link><pubDate>Fri, 18 Nov 2016 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/publications/sd201611/</guid><description>Links Magazine information: http://gihyo.jp/magazine/SD/archive/2016/201611 Store (Amazon): https://www.amazon.co.jp/o/ASIN/B01LBFWJT2/gihyojp-22</description></item><item><title>Conatiner Image Architecture</title><link>https://ladicle.com/activity/talks/ctvs10/</link><pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/talks/ctvs10/</guid><description> Do you know how to build the Dockerfile? I talked about OCI image specification and docker image architecture for in-depth understanding of the process of building images, probing cache and parsing the Dockerfile.
Links Slide: https://speakerdeck.com/ladicle/container-image-architecture Event: https://ct-study.connpass.com/event/38841/ Video: https://www.youtube.com/watch?v=dc0YrpqgNDg</description></item><item><title>Container CI &amp; JJB</title><link>https://ladicle.com/activity/talks/jenkinstudy9/</link><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/talks/jenkinstudy9/</guid><description> I talked about container CI and how to mange Jenkins jobs in our project. The OpenStack project is using Jenkins Job Builder. It manage a job definition using by YAML files.
Links Slide: https://speakerdeck.com/ladicle/container-ci-and-jenkins-job-builder Event: http://jenkins.connpass.com/event/35030/ Demo Code: https://github.com/Ladicle/jjb-demo</description></item><item><title>k8s helm &amp; helmc</title><link>https://ladicle.com/activity/talks/k8s-meetup2/</link><pubDate>Mon, 20 Jun 2016 00:00:00 +0000</pubDate><guid>https://ladicle.com/activity/talks/k8s-meetup2/</guid><description> I talked about helm and helmc. Helm is a package manager for Kubernetes, and Helm classic is a previous version of it. Helm will be implemented a lot of useful functions in the future, but it isn&amp;rsquo;t better than helmc for now. That&amp;rsquo;s why it&amp;rsquo;s better to manage manifests with helmc and follow the trend of helm.
Links Slide: https://speakerdeck.com/ladicle/kubernetes-helm-and-helmc Event: https://k8sjp.connpass.com/event/33508/</description></item></channel></rss>