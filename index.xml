<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Exception();</title>
    <link>https://ladicle.github.io/</link>
    <description>Recent content on Exception();</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Mon, 08 Aug 2016 19:48:11 +0900</lastBuildDate>
    <atom:link href="https://ladicle.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Golang 1.7 release party in Tokyo</title>
      <link>https://ladicle.github.io/post/golang1.7-release-party/</link>
      <pubDate>Mon, 08 Aug 2016 19:48:11 +0900</pubDate>
      
      <guid>https://ladicle.github.io/post/golang1.7-release-party/</guid>
      <description>

&lt;p&gt;補欠だったので無理かと思っていたら、当日繰り上がった。
イベントページは&lt;a href=&#34;http://gocon.connpass.com/event/37332/&#34;&gt;こちら&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-what-s-new-go1-7-by-deeeet&#34;&gt;1. What&amp;rsquo;s new Go1.7? by @deeeet&lt;/h2&gt;

&lt;p&gt;Golang1.7、残念ながらRelease表明されなかった(1.6の時以来2回目)&lt;/p&gt;

&lt;h3 id=&#34;2-release-note-points&#34;&gt;2. Release note points&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;MacOS Sierraをサポート&lt;/li&gt;
&lt;li&gt;Linkerが速くなった(特にk8sのような大規模のコードへの恩恵は大きい)&lt;/li&gt;
&lt;li&gt;StackFrameが入り、LinuxのProfilerが使えるようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X&lt;/code&gt;オプションをつけると、key=valueでつなげないものはエラーになる&lt;/li&gt;
&lt;li&gt;vendoring optionが使えなくなった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;// go-binary-only-package&lt;/code&gt;を付けるとバイナリだけを提供できるようになった&lt;/li&gt;
&lt;li&gt;標準パッケージは以下のようなものが変更された(他にもあるよ)

&lt;ul&gt;
&lt;li&gt;context: 今まで標準ではなかった&lt;/li&gt;
&lt;li&gt;testing: subtestとbenchmarkが作成できる&lt;/li&gt;
&lt;li&gt;http tracing: httpリクエストの各ステップにフック関数の挿入が可能に&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;所感&lt;/strong&gt;&lt;br /&gt;
HTTP tracingデバッグとチューニングにとても便利そう&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;3-about-contribution-of-go-by-stanaka&#34;&gt;3. About contribution of Go by @stanaka&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;GolangへのContribution方法(前回のGoConと同じ!)&lt;/li&gt;
&lt;li&gt;まずはContribution Guidlineをよむ&lt;/li&gt;
&lt;li&gt;GitHubではなくGerritを使う(&lt;code&gt;FIX&lt;/code&gt;, &lt;code&gt;DONE&lt;/code&gt;なコンパクトなコメントを返せる)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;所感&lt;/strong&gt;&lt;br /&gt;
未だにGerrit慣れないが、コメントボタンよさそう&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;4-context-package-by-ono-matope&#34;&gt;4. context package by @ono_matope&lt;/h2&gt;

&lt;p&gt;スライドは&lt;a href=&#34;http://go-talks.appspot.com/github.com/matope/talks/2016/context/context.slide#1&#34;&gt;こちら&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1.7に標準パッケージに入ったが2014年にはPJが始まっていた&lt;/li&gt;
&lt;li&gt;様々なライブラリのキャンセル要求インタフェースの標準か&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ここら辺参照&#34;&gt;ここら辺参照:&lt;/h3&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;このへんにキャンセルの話とか書いてある ▶ Go Concurrency Patterns: Pipelines and cancellation - The Go Blog &lt;a href=&#34;https://t.co/gVD3tw0x5G&#34;&gt;https://t.co/gVD3tw0x5G&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/go17party?src=hash&#34;&gt;#go17party&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yoshifumi YAMAGUCHI (@ymotongpoo) &lt;a href=&#34;https://twitter.com/ymotongpoo/status/762600547287392256&#34;&gt;2016年8月8日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;5-introduction-to-ssa-by-shinpeinkt&#34;&gt;5. Introduction to SSA by @shinpeiNKT&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Go1.7のSingle Static Single Assignment(SSA)のお話&lt;/li&gt;
&lt;li&gt;ベンチマークスピードが5-35%速くなり、バイナリサイズも2-30%削減された&lt;/li&gt;
&lt;li&gt;今まで中身を返さない関数も全てコンパイルしていたが、1.7から中身はskip&lt;/li&gt;
&lt;li&gt;1変数に対する代入は1つのみとし、それ以外のものを不要変数と判定する&lt;/li&gt;
&lt;li&gt;最適化はされるが、コンパイル速度は10%ほど低下した&lt;/li&gt;
&lt;li&gt;SSAを回避するフラグもある&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ここら辺参照-1&#34;&gt;ここら辺参照:&lt;/h3&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;SSA (Static Single Assignment) についてわかりやすく書いてある &lt;a href=&#34;https://t.co/a5loVKfGOA&#34;&gt;https://t.co/a5loVKfGOA&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/go17party?src=hash&#34;&gt;#go17party&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yoshifumi YAMAGUCHI (@ymotongpoo) &lt;a href=&#34;https://twitter.com/ymotongpoo/status/762606087333818368&#34;&gt;2016年8月8日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;6-don-t-use-reflect-by-lestrrat&#34;&gt;6. Don&amp;rsquo;t use reflect by @lestrrat&lt;/h2&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/5Pn3CxxmumAP04&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;みんなのGo言語&amp;rdquo; よろしく&lt;/li&gt;
&lt;li&gt;Reflectは遅くなるし、本当に必要な時だけ使おう&lt;/li&gt;
&lt;li&gt;1.7の変更点

&lt;ul&gt;
&lt;li&gt;フィールドの位置が極端に大きいものはpanic&lt;/li&gt;
&lt;li&gt;exportしていない関数の取得が不可能に&lt;/li&gt;
&lt;li&gt;動的にstructが定義できるように&lt;/li&gt;
&lt;li&gt;struct tagに&lt;code&gt;lookup()&lt;/code&gt;が導入された&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;所感&lt;/strong&gt;&lt;br /&gt;
JSON parseのチェックよく悩んでいたので&lt;code&gt;lookup()&lt;/code&gt;は嬉しい変更だ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;7-goji-とレイヤ化アーキテクチャ-by-t2y&#34;&gt;7. Goji とレイヤ化アーキテクチャ by @t2y&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;白ヤギでAPIサーバをGolangで開発し、1年が経過したのでその知見&lt;/li&gt;
&lt;li&gt;Frameworkは&lt;a href=&#34;https://github.com/goji/goji&#34;&gt;Goji&lt;/a&gt;を使っている(レポジトリは移動してる)&lt;/li&gt;
&lt;li&gt;サービスには(基本的に)終わりがなく、設計は継続する&lt;/li&gt;
&lt;li&gt;AOPはGoにないのか? &amp;ndash; Roadmapにはない。go nutsで議論するといいよ&lt;/li&gt;
&lt;li&gt;コードに変更がない == 安定する&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;所感&lt;/strong&gt;&lt;br /&gt;
私は標準 or Revelをよく使っているが、よさそうと思っていたginは最近あまり更新されていない&amp;hellip;。
いま一番よいWebFrameworkは何だろう?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;8-unity-plugin-by-tenntenn&#34;&gt;8. Unity Plugin by @tenntenn&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;昨日、一昨日やっていたMakerFairで&lt;code&gt;UnityちゃんのVR吐息ヘッドフォン&lt;/code&gt;を作った話&lt;/li&gt;
&lt;li&gt;GolangでUnityのネイティブプラグインを作った&lt;/li&gt;
&lt;li&gt;Go Mobileを使っている(最近またアップデートされたのでbuildオプションが変わった&amp;hellip;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;反響&#34;&gt;反響:&lt;/h3&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/pandax381&#34;&gt;@pandax381&lt;/a&gt; &lt;a href=&#34;https://twitter.com/tenntenn&#34;&gt;@tenntenn&lt;/a&gt; the future is bright!&lt;/p&gt;&amp;mdash; Dαve Cheney (@davecheney) &lt;a href=&#34;https://twitter.com/davecheney/status/761787273159462914&#34;&gt;2016年8月6日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;所感&lt;/strong&gt;&lt;br /&gt;
MakerFair行きたかったが間に合わなかったX(&lt;br /&gt;
最近Android開発してないのでGoMobile周り追いかけてないけど、　　
アップデートで大幅に変わるの大変そうだ。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;thanks&#34;&gt;Thanks :)&lt;/h2&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;ヤッホー🍺 &lt;a href=&#34;https://twitter.com/hashtag/go17party?src=hash&#34;&gt;#go17party&lt;/a&gt; &lt;a href=&#34;https://t.co/4Hw2Z0o2rH&#34;&gt;pic.twitter.com/4Hw2Z0o2rH&lt;/a&gt;&lt;/p&gt;&amp;mdash; ladicle (@Ladicle) &lt;a href=&#34;https://twitter.com/Ladicle/status/762592924043317248&#34;&gt;2016年8月8日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apache Mesos勉強会に行ってきた</title>
      <link>https://ladicle.github.io/post/apache-mesos/</link>
      <pubDate>Thu, 04 Aug 2016 20:22:57 +0900</pubDate>
      
      <guid>https://ladicle.github.io/post/apache-mesos/</guid>
      <description>

&lt;p&gt;MesosはKubernetesと比較されることが多いので気になっていた。&lt;br /&gt;
イベントのURLは&lt;a href=&#34;https://www.google.com/url?q=http%3A%2F%2Fconnpass.com%2Fevent%2F36415%2F&amp;amp;sa=D&amp;amp;usd=2&amp;amp;usg=AFQjCNHlDmy2a6EiNcCrDPxYCtHWQoGSIg&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;1-mesos-とは何か&#34;&gt;1. Mesos とは何か&lt;/h2&gt;

&lt;p&gt;木内さん @クリエーションライン&lt;/p&gt;

&lt;h3 id=&#34;概要&#34;&gt;概要&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;DCOS(ﾃﾞｨｰｼｰｵｰｴｽ)と呼べ&lt;/li&gt;
&lt;li&gt;YARN日書いが、YARNはHadoopのためのジョブスケジューラ&lt;/li&gt;
&lt;li&gt;Mesosはサービス基盤の運用を目的にしている(対象範囲が広い)&lt;/li&gt;
&lt;li&gt;Mesos is cluster of cluster&lt;/li&gt;
&lt;li&gt;Dockerとの統合をサポート&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;コンテナ化すると分業が可能&#34;&gt;コンテナ化すると分業が可能&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;データセンタチーム : 実行基盤の配置だけ&lt;/li&gt;
&lt;li&gt;インフラチーム : リソースの稼働状況だけ&lt;/li&gt;
&lt;li&gt;アプリケーションチーム : コンテナの内容だけ&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;この手の物は作業が少なくなるというより&lt;br /&gt;
(むしろ見るコンポーネントは増えていることが多々)
分業できるところに利点を置いてるので、小さいチームもしくは大きいチームでも分業されないと
運用負荷は上がるばかりだと思う&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;2-docker-ホスティングサービス-arukas-での-mesos-marathon-の活用について&#34;&gt;2. Docker ホスティングサービス &amp;lsquo;Arukas&amp;rsquo; での Mesos + Marathon の活用について&lt;/h2&gt;

&lt;p&gt;山田 修司 さん @さくらインターネット&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/3gGcyVAODDcPXg&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt;&lt;/p&gt;

&lt;h3 id=&#34;構成&#34;&gt;構成&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Zookeeper&lt;/li&gt;
&lt;li&gt;Master&lt;/li&gt;
&lt;li&gt;Slave: executor実行, CPU情報の送信&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;k8s-vs-mesos&#34;&gt;k8s VS Mesos&lt;/h3&gt;

&lt;p&gt;k8sはセットアップ簡単だけどシングルテナント向けでコンテナOnly。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;k8sのMultiTenant話は&lt;a href=&#34;http://blog.kubernetes.io/2016/05/hypernetes-security-and-multi-tenancy-in-kubernetes.html?utm_content=buffer08df8&amp;amp;utm_medium=social&amp;amp;utm_source=twitter.com&amp;amp;utm_campaign=buffer&#34;&gt;ここら&lt;/a&gt;辺にある。&lt;br /&gt;
セットアップ楽という話が出ていたが&amp;hellip;。(Mesosがものすごくツライのかもしれない)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;twitterでの議論&#34;&gt;Twitterでの議論&lt;/h3&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Mesos+Marathonはなぜヘビー級に汚れる環境向けなのかの説明が結局なかった気がするが、なんでだろ。環境が分離されるから、がその理由だった? &lt;a href=&#34;https://twitter.com/hashtag/mesosjp?src=hash&#34;&gt;#mesosjp&lt;/a&gt;&lt;/p&gt;&amp;mdash; tagomoris (@tagomoris) &lt;a href=&#34;https://twitter.com/tagomoris/status/761150770943135744&#34;&gt;2016年8月4日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/tagomoris&#34;&gt;@tagomoris&lt;/a&gt; 対比でいうと、シングルテナント向けかどうかと組み合わせると、割と大きな差がついてると思います。あと最初から狙ってるかどうか&lt;/p&gt;&amp;mdash; SO-Copy&amp;#39;n&amp;#39;paster (@kuenishi) &lt;a href=&#34;https://twitter.com/kuenishi/status/761152013132365824&#34;&gt;2016年8月4日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&#34;mesos-marathon-demo&#34;&gt;mesos-marathon-demo&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/uzyexe/mesos-marathon-demo&#34;&gt;https://github.com/uzyexe/mesos-marathon-demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3-mesos-frameworkの作り方&#34;&gt;3. Mesos Frameworkの作り方&lt;/h2&gt;

&lt;p&gt;上西さん @ノーチラス・テクノロジーズ&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;759e5933c08c4460a10ab21b97949384&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;概要-1&#34;&gt;概要&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Scheduller &amp;amp; Framework時のファイルオーバーとなどは自前で実装する必要あり(辛そう)&lt;/li&gt;
&lt;li&gt;Frameworkを自分で作らないとMesosを作ったとは言えない(emacsのメインモードを作らないと 以下略&lt;/li&gt;
&lt;li&gt;CPUもGPUもcgroupsで隔離されている&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;retz&#34;&gt;Retz&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/retz&#34;&gt;https://github.com/retz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;4-mesos-に-gpu-を食わせてみるテスト-2016夏&#34;&gt;4. Mesos に GPU を食わせてみるテスト ～2016夏～&lt;/h2&gt;

&lt;p&gt;須藤さん @さくらインターネット&lt;/p&gt;

&lt;h3 id=&#34;概要-2&#34;&gt;概要&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;高火力は、大量の計算資源を使ってもらうためのクローズドサービス&lt;/li&gt;
&lt;li&gt;機械学習での利用がおおい&lt;/li&gt;
&lt;li&gt;GPGPU界隈はこわい&lt;/li&gt;
&lt;li&gt;Framework作る人向けにMesos層を提供する(かもしれない)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;5-iaasの実装をフルスクラッチした人が思う-もうmesosで良いじゃんって話&#34;&gt;5. IaaSの実装をフルスクラッチした人が思う、もうMesosで良いじゃんって話&lt;/h2&gt;

&lt;p&gt;山崎 泰宏さん @Axsh&lt;/p&gt;

&lt;h3 id=&#34;概要-3&#34;&gt;概要&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Mesosを使ってるわけではないけど、IaaSを作っている人から見たMesosの話&lt;/li&gt;
&lt;li&gt;仮想ネットワークだけ求めているお客さんが多かった&lt;/li&gt;
&lt;li&gt;OS相当のソフトウェアがDCにも必要&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;ものすごくうまく情報収集して設計していて凄い&amp;hellip;&lt;br /&gt;
概念的なOSかと思っていたらPOSIXの互換APIを実装している :o&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Kindle Unlimitedの技術本</title>
      <link>https://ladicle.github.io/post/kindle-unlimited/</link>
      <pubDate>Wed, 03 Aug 2016 12:33:51 +0900</pubDate>
      
      <guid>https://ladicle.github.io/post/kindle-unlimited/</guid>
      <description>

&lt;p&gt;Kindle Unlimitedが今日から開始した。&lt;br /&gt;
持っている本や良みたかった本が登録されていたのでまとめてみた。&lt;/p&gt;

&lt;h2 id=&#34;technology&#34;&gt;Technology&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00L7FYBMK/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00L7FYBMK&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;&lt;img src=&#34;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B00L7FYBMK&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=ladicle-22&#34; alt=&#34;img&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00CY9256C/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00CY9256C&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;&lt;img src=&#34;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B00CY9256C&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=ladicle-22&#34; alt=&#34;img&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00X99MC1E/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00X99MC1E&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;&lt;img src=&#34;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B00X99MC1E&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=ladicle-22&#34; alt=&#34;img&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00P7R545M/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00P7R545M&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;&lt;img src=&#34;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B00P7R545M&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=ladicle-22&#34; alt=&#34;img&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00HR19TSO/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00HR19TSO&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;&lt;img src=&#34;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B00HR19TSO&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=ladicle-22&#34; alt=&#34;img&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00IR1HYI0/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00IR1HYI0&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;&lt;img src=&#34;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B00IR1HYI0&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=ladicle-22&#34; alt=&#34;img&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00U5MVXZO/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00U5MVXZO&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;&lt;img src=&#34;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B00U5MVXZO&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=ladicle-22&#34; alt=&#34;img&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00IR1HYGW/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00IR1HYGW&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;&lt;img src=&#34;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B00IR1HYGW&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=ladicle-22&#34; alt=&#34;img&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00L7FYBMK/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00L7FYBMK&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;オンラインジャッジではじめるC/C++プログラミング入門&lt;/a&gt; : 読みたい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00CY9256C/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00CY9256C&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;プログラミングコンテスト・チャレンジブック&lt;/a&gt; : パズルとして楽しめる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00X99MC1E/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00X99MC1E&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;Write Portable Code&lt;/a&gt; : 読みたい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00P7R545M/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00P7R545M&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;Code Craft&lt;/a&gt; : 読みたい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00HR19TSO/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00HR19TSO&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;世界で闘うプログラミング力を鍛える150問&lt;/a&gt; : よい本。コーディング面接に最適 :)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00IR1HYI0/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00IR1HYI0&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;30日でできる! OS自作入門&lt;/a&gt; : 学生のときに読んだ。ただしフロッピーなので&lt;a href=&#34;http://symfoware.blog68.fc2.com/blog-entry-706.html&#34;&gt;ここら辺&lt;/a&gt;参照&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00U5MVXZO/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00U5MVXZO&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;プログラミングコンテスト攻略のためのアルゴリズムとデータ構造&lt;/a&gt;: 読みたい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00IR1HYGW/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00IR1HYGW&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;アジャイルな見積もりと計画づくり&lt;/a&gt; : ザッとでも読むと感覚がわかる&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;others&#34;&gt;Others&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00XCIETIG/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00XCIETIG&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;&lt;img src=&#34;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B00XCIETIG&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=ladicle-22&#34; alt=&#34;img&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B00XCIETIG/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=B00XCIETIG&amp;amp;linkCode=as2&amp;amp;tag=ladicle-22&#34;&gt;ウトライン・プロセッシング入門&lt;/a&gt; : 後で読む&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;所感&#34;&gt;所感&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;実際に読まれたページ数に対応した金額が著者に支払われるようだが&lt;br /&gt;
揉めそうな予感しかない。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Pull RequestテンプレートでPRの品質を保つ</title>
      <link>https://ladicle.github.io/post/add-github-templates/</link>
      <pubDate>Tue, 02 Aug 2016 15:19:34 +0900</pubDate>
      
      <guid>https://ladicle.github.io/post/add-github-templates/</guid>
      <description>

&lt;p&gt;GitHubにContribution Guideの表示やPull Requestのテンプレートを導入してから
RPの品質やレビューの水準が一定に保たれたと感じている。&lt;/p&gt;

&lt;h2 id=&#34;pull-requestのテンプレートを追加する&#34;&gt;Pull Requestのテンプレートを追加する&lt;/h2&gt;

&lt;p&gt;2016年の2月からGitHubが&lt;a href=&#34;https://help.github.com/articles/creating-a-pull-request-template-for-your-repository/&#34;&gt;テンプレート機能&lt;/a&gt;をサポートした。(黒魔術なスクリプトは不要!)
使い方は簡単で、&lt;strong&gt;レポジトリ&lt;/strong&gt;の&lt;code&gt;root&lt;/code&gt;、又は&lt;code&gt;.github/&lt;/code&gt;ディレクトリに&lt;code&gt;PULL_REQUEST_TEMPLATE.md&lt;/code&gt;を配置するだけだ。&lt;/p&gt;

&lt;p&gt;現在は以下のようなテンプレートを使用している。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cat .github/PULL_REQUEST_TEMPLATE.md
## Ticket
* https://[jira-host]/[ticket-id]

## Changes
*

## Check lists
* [ ] XXXの時はYYYを行う
* [ ] 上記に該当しないため不要
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PRのブランチ名には&lt;a href=&#34;https://www.atlassian.com/software/jira&#34;&gt;JIRA&lt;/a&gt;のチケット番号を入れているため目的やReviewerの指定は省略した。
重点的にRVしてほしいポイントのみ記述する方式だ。
また、どうしても自動化できないタスクはチェックリストにして実施漏れを防いでいる。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br /&gt;
* Issueのテンプレートも&lt;code&gt;ISSUE_TEMPLATE.md&lt;/code&gt;で作成できる&lt;br /&gt;
* 拡張子は&lt;code&gt;.md&lt;/code&gt;や&lt;code&gt;.txt&lt;/code&gt;、&lt;code&gt;.org&lt;/code&gt;等&lt;code&gt;README&lt;/code&gt;と同じくだいたい使える&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;contribution-guideを表示する&#34;&gt;Contribution Guideを表示する&lt;/h2&gt;

&lt;p&gt;Contribution Guideは&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;ファイルをレポジトリに配置するだけだ。
PR作成時、以下のようなリンクが表示されるようになる。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/dY6CUwtzcgHTjPTHQDBufy3UR6p0wRWPxcI5a3gSIemkjz8g-InaerI8vrT4IDQD0U5tCWPuGLYHTBydY2K_6Wmoe5L8thztKKTw9Ea1rCAC2ld05ip3uUDioWXcfZlZ6bdCbJJij5Yddr8PqF_sgsWbT6foZG2m5_iGhRjdoghq2RJIScG5AWOeSzJo7QLOqBzuFrSSkRHbshf2hwKWX3kVwFv21wbtieEQgjgqswYA39aJglqWGE6ddC-HR3A8Ga8ATYpvseYW40ZbpXc5IZhBLKBZj99uaPMp7K4t0O4yOjR7tObn2TcLRVdo7R4hb9LC-3WYvB-vc0BvXPg_hxkYjL-sN-eLbFkot-Td5vNEhaJ-3gtv91ZF4oS8RVJJgJwMLRiPdM43_sYXapUxUPee2OzOnqATeTjsgVXM58eUUDP-OkzkGi_Kn0T-iLIoyAWwoXXlvoloZMWezo8CL5SuBVSx6b99EGVau_9d03_pvxqI9XKWsKwW87nojv38Qj7dDSgk8KDjnE28fnzP-CAVaQuhof4P99CYrE7R45UMwB7GFudAl7IEoufegv3wY_oRHKqtzjXRDa9758BomY2OZlTSBudA=w1124-h334-no&#34; alt=&#34;notification&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br /&gt;
* CONTRIBUTION.mdはルートに配置する方が見られる機会が増えるので良いと思う&lt;br /&gt;
* 同じく拡張子は変更可能&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Hugoで静的なブログを作成する</title>
      <link>https://ladicle.github.io/post/hugo-de-blog/</link>
      <pubDate>Mon, 01 Aug 2016 21:46:40 +0900</pubDate>
      
      <guid>https://ladicle.github.io/post/hugo-de-blog/</guid>
      <description>

&lt;p&gt;このブログは&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;を使用してGithub.io上に建てている。&lt;br /&gt;
静的Webサイトジェネレータは有名どころだとRailsの&lt;a href=&#34;https://github.com/jekyll/jekyll&#34;&gt;Jekyll&lt;/a&gt;や&lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt;、Pythonの&lt;a href=&#34;https://github.com/getpelican/pelican&#34;&gt;Pelican&lt;/a&gt;、Nodeの&lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;などが存在するが、
Hugoは速さを売りにしている。&lt;/p&gt;

&lt;h2 id=&#34;why-hugo&#34;&gt;Why Hugo?&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Golang&lt;/strong&gt;で書かれている。I&amp;rsquo;m gopher!!&lt;/li&gt;
&lt;li&gt;モダンな&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;Themes&lt;/a&gt;が揃っている&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;hugoをインストールする&#34;&gt;Hugoをインストールする&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;brew install hugo&lt;/code&gt;を実行してhugoをインストール&lt;sup&gt;&lt;a href=&#34;#ref1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;hugoコマンドでサイトのベースを作成する&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site &amp;lt;YOUR_SITE_NAME&amp;gt;
$ tree .
.
├── archetypes: : 独自のプロパティ定義
├── config.toml : サイトのTitleや説明、テーマなど全体設定のファイル
├── content : ブログ記事等、サイトの中身を格納する
├── data : TOML, JSONなどの設定ファイル
├── layouts : 静的サイトを作成する時の変換レイアウトの指定
├── static : CSSやJavaScriptを配置する
└── themes : サイトのテーマを格納する

6 directories, 1 file
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;hugo server&lt;/code&gt;で起動し、&lt;code&gt;localhost:1313&lt;/code&gt;にアクセスする&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span id=&#34;ref1&#34;&gt;1&lt;/span&gt;. OSX以外の場合は&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;Releases&lt;/a&gt;から該当のバイナリをDLしてPathを通す&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;テーマを変更する&#34;&gt;テーマを変更する&lt;/h2&gt;

&lt;p&gt;テーマの&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;ここ&lt;/a&gt;一覧はここで見ることができる。&lt;br /&gt;
今回は例としてこのブログに使われている&lt;a href=&#34;http://themes.gohugo.io/cactus/&#34;&gt;cactus&lt;/a&gt;を使う。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;テーマのディレクトリに移動する&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;cd themes
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;テーマをGit cloneする&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/digitalcraftsman/hugo-cactus-theme.git
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;repositoryのルートに戻り、config.tomlにテーマを追加する&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;$ cat config.toml | grep theme
theme = &amp;quot;hugo-cactus-theme&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;他の設定については、&lt;code&gt;themes/hugo-cactus-theme/exampleSite/config.toml&lt;/code&gt;を参考にするとよい&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;サーバを起動し、テーマが反映されていることを確認する&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;おそらく、シンプルな画面が表示されるだろう。&lt;/p&gt;

&lt;h2 id=&#34;次回&#34;&gt;次回&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;記事の投稿とGitHub.ioを使った配信あたりについて書く。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>about</title>
      <link>https://ladicle.github.io/about/</link>
      <pubDate>Fri, 15 Jul 2016 21:04:38 +0900</pubDate>
      
      <guid>https://ladicle.github.io/about/</guid>
      <description>

&lt;h1 id=&#34;ladicle&#34;&gt;Ladicle&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Just here for code? It&amp;rsquo;s on &lt;a href=&#34;https://github.com/Ladicle&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am Software Engineer.
I develop cloud services at NTT communications.
My interesting things are distributed system, CI, web application architecture.&lt;/p&gt;

&lt;h2 id=&#34;contact-me&#34;&gt;Contact Me&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;E-mail : ladiclexxx@gmail.com&lt;/li&gt;
&lt;li&gt;GitHub : &lt;a href=&#34;https://github.com/Ladicle&#34;&gt;https://github.com/Ladicle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/Ladicle&#34;&gt;https://twitter.com/Ladicle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>hello world</title>
      <link>https://ladicle.github.io/post/hello-world/</link>
      <pubDate>Fri, 15 Jul 2016 17:23:37 +0900</pubDate>
      
      <guid>https://ladicle.github.io/post/hello-world/</guid>
      <description>&lt;p&gt;My name is Ladicle.
I&amp;rsquo;m a software engineer. I develop cloud services.
My interesting things are distributed system, CI, web application architecture.&lt;/p&gt;

&lt;p&gt;This blog is generated by hugo :)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>