<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technology on Exception();</title>
    <link>https://ladicle.com/categories/technology/</link>
    <description>Recent content in Technology on Exception();</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Tue, 09 Aug 2016 19:42:46 +0900</lastBuildDate>
    
	<atom:link href="https://ladicle.com/categories/technology/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>k8sをUbuntu14.04から16.04に移行した</title>
      <link>https://ladicle.com/post/systemd-for-upstart/</link>
      <pubDate>Tue, 09 Aug 2016 19:42:46 +0900</pubDate>
      
      <guid>https://ladicle.com/post/systemd-for-upstart/</guid>
      <description>&lt;p&gt;Kubernetesを14.04から16.04に移行した。&lt;br /&gt;
もともとAnsibleでk8sのクラスタは構築していたのでplaybookを修正していったが、
修正点のほとんどは、UpstartファイルをSystemdファイルの書き換えだけだった。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golangのバイナリに静的ファイルを組み込む</title>
      <link>https://ladicle.com/post/pack-staic-file-to-binary-for-golang/</link>
      <pubDate>Sat, 06 Aug 2016 10:06:25 +0900</pubDate>
      
      <guid>https://ladicle.com/post/pack-staic-file-to-binary-for-golang/</guid>
      <description>&lt;p&gt;markdownをgithubスタイルのHTMLに変換する&lt;a href=&#34;https://github.com/Ladicle/mark2h&#34;&gt;mark2h&lt;/a&gt;というものを作成したが、
使用するCSSやHTMLのテンプレートはバイナリに組み込まないとパスが変わった時に反映されなくなってしまう。
今回は、&lt;a href=&#34;https://github.com/Ladicle/mark2h&#34;&gt;go-bindata&lt;/a&gt;を使って静的ファイルをGoのバイナリに組み込んでみる。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugoで記事と固定ページを書く</title>
      <link>https://ladicle.com/post/write-post-by-hugo/</link>
      <pubDate>Fri, 05 Aug 2016 16:43:31 +0900</pubDate>
      
      <guid>https://ladicle.com/post/write-post-by-hugo/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://ladicle.github.io/post/hugo-de-blog/&#34;&gt;前回&lt;/a&gt;は、Hugoのインストール方法とテーマの変更方法について説明した。
今回は記事の作成と配信方法について解説する。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>コンテナとDockerについて思うこと</title>
      <link>https://ladicle.com/post/docker-left-oci/</link>
      <pubDate>Mon, 01 Aug 2016 21:52:39 +0900</pubDate>
      
      <guid>https://ladicle.com/post/docker-left-oci/</guid>
      <description>&lt;p&gt;ガチャピン先生の&lt;a href=&#34;http://blog.gachapin-sensei.com/archives/5174099.html&#34;&gt;Docker、OCIやめるってよ&lt;/a&gt;の記事が話題だったので、
コンテナとDockerについて思ったことを書いてみる。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugoで静的なブログを作成する</title>
      <link>https://ladicle.com/post/hugo-de-blog/</link>
      <pubDate>Sun, 31 Jul 2016 21:46:40 +0900</pubDate>
      
      <guid>https://ladicle.com/post/hugo-de-blog/</guid>
      <description>&lt;p&gt;このブログは&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;を使用してGithub.io上に建てている。&lt;br /&gt;
静的Webサイトジェネレータは有名どころだとRailsの&lt;a href=&#34;https://github.com/jekyll/jekyll&#34;&gt;Jekyll&lt;/a&gt;や&lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt;、Pythonの&lt;a href=&#34;https://github.com/getpelican/pelican&#34;&gt;Pelican&lt;/a&gt;、Nodeの&lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;などが存在するが、
Hugoは速さを売りにしている。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>