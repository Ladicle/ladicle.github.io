<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Exception();</title>
    <link>//ladicle.github.io/tags/docker/</link>
    <description>Recent content in Docker on Exception();</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Mon, 01 Aug 2016 21:52:39 +0900</lastBuildDate>
    
	<atom:link href="//ladicle.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>コンテナとDockerについて思うこと</title>
      <link>//ladicle.github.io/post/docker-left-oci/</link>
      <pubDate>Mon, 01 Aug 2016 21:52:39 +0900</pubDate>
      
      <guid>//ladicle.github.io/post/docker-left-oci/</guid>
      <description> ガチャピン先生のDocker、OCIやめるってよの記事が話題だったので、 コンテナとDockerについて思ったことを書いてみる。
コンテナ = Dockerか? Dockerによってコンテナが多くの人に使われるようになったのは確かだ。
しかし、コンテナ = Dockerか? という訳ではないと思う。
単純なコンテナの利点の利用&amp;mdash;
例えば、『コンテナ化して各アプリケーションを隔離したい。』と思った時、 DockerはLinuxコンテナの技術を複雑に組み合わせたDockerはオーバースキルであることが多い。
Dockerのよさ Dockerによってコンテナが流行(?)した理由として以下のようなものが考えられる。
  技術の隠蔽化 DockerHubの存在   Linuxコンテナ技術自体は昔から利用されていたが、 これらが統合されてDockerという形でラッピングされたことによって、 アプリケーションレイヤのエンジニアにとっても使いやすいものとなった。
また、DockerHubはDockerが流行に一躍をかっている。 様々なアプリケーションがDockerHubに登録されたことによって、 今までコンテナというものに触れたことがなかった人でも
$ docker run nginx  という簡単なコマンドだけで
『コンテナという技術によって簡単にアプリケーションが立ちがる』
という体験ができる。
(brewやaptのようなパッケージマネージャのように)
参考になる  こういう文脈で I agreeではじまってるときは、たいていagreeしてない
 </description>
    </item>
    
  </channel>
</rss>