<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>emacs on Ladicle</title><link>https://ladicle.com/categories/emacs/</link><description>Recent content in emacs on Ladicle</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 25 Jun 2020 21:37:29 +0900</lastBuildDate><atom:link href="https://ladicle.com/categories/emacs/index.xml" rel="self" type="application/rss+xml"/><item><title>コードリーティングとOrg Capture</title><link>https://ladicle.com/post/20200625_123915/</link><pubDate>Thu, 25 Jun 2020 21:37:29 +0900</pubDate><guid>https://ladicle.com/post/20200625_123915/</guid><description>Table of Contents org-captureで楽をする 各種ソースコードホスティングサービスのリンクを取得 他の人にシュッと共有する 人間忘れるものなので、コードリーディングする時はorg-modeでメモをとっている。 このメモを取る時なのだけど、単純に文章だけだと後から追いづらい。 なので、気になった箇所は文章と共にファイルリンク1とGitHubへのリンクもセットで記録している。 かなり便利なのでEmacsユーザの皆様にオススメ。
org-captureで楽をする メモと共にリンクを記録しているといったが、流石にファイルパス・行番号・コミットハッシュ・GitHubリンクを手動で調べて挿入するのでは面倒すぎる。 そこで、org-captureを使ってカーソル位置の情報をメモ帳の指定した位置に挿入している。
Your browser does not support the video tag. Video 1: org-captureでコードのリンクをメモに挿入する例 実際の設定はこんな感じ。org-captureの (function) オプションを利用して書き込み先のバッファとカーソル位置を選択している。 書き込み先のサブツリーは事前に (org-code-capture--store-here) でマークしておくと、末尾にキャプチャ内容が追加されていく。
(defconst ladicle/org-journal-dir &amp;#34;~/Dropbox/org/journal/&amp;#34;) (defconst ladicle/org-journal-file-format (concat ladicle/org-journal-dir &amp;#34;%Y%m%d.org&amp;#34;)) (defvar org-code-capture--store-file &amp;#34;&amp;#34;) (defvar org-code-capture--store-header &amp;#34;&amp;#34;) ;; This function is used in combination with a coding template of org-capture. (defun org-code-capture--store-here () &amp;#34;Register current subtree as a capture point.</description></item><item><title>iPadで作図しMacでいい感じにメモる</title><link>https://ladicle.com/post/20200617_130952/</link><pubDate>Fri, 12 Jun 2020 08:40:00 +0900</pubDate><guid>https://ladicle.com/post/20200617_130952/</guid><description>Table of Contents 今までの連携方法 Catalinaの機能を利用した連携 Notes以外でも連携したい 実際の設定 既存の図にチョイ足しする コード書いたり読んだりするのはMacでやったほうが楽だし、図を書いたりするのはiPadが楽。ということでこの間をいい感じに繋いだ話。
今までの連携方法 今までは以下の手順で連携していた。それなりに面倒なので、気軽に図を書いて差し込むという気になれなかった。
iPadのPaperというアプリで図を書く ShareからAirDropを使ってファイルを転送 (ほとんどの場合キャンバスサイズいっぱいに図を書かないので)Previewで画像の切り出し メモ先(Emacs)にドラッグ&amp;amp;ドロップ Catalinaの機能を利用した連携 macOS CatalinaからMacとiPadを連携させるSidecarと共に、MacとiOS1を連携するいくつかの便利機能が入った。 いずれもMac側から実行するとiPadのアプリが自動で起動する。そしてiPad側で編集が完了すると、Mac側にその結果が反映されるという動き。
NotesへiPadから写真/ドキュメント/図/を挿入 公式メモアプリのNotes2で 右クリック &amp;gt; insert from iPhone or iPad &amp;gt; Take Photo/Scan Document/Add sketch 画像/PDFにiPadで書き込み Finderから画像/PDFを 右クリック &amp;gt; Quick Action &amp;gt; Markup Notes以外でも連携したい Figure 1: Integration Flow
公式の機能も便利なんだけど、Notesだけだとコードのシンタックスハイライトとか機能が無さすぎるので常用できない。(つまりEmacs org-mode3つかいたい) また、iPadでの作図もPaper4というアプリが使いやすいのでこれを使いたい。何か良い方法がないかと考えていると、Appleデバイス間のクリップボード同期機能 を思い出した。
クリップボードを利用すれば、アプリケーションに縛られることなくiPad&amp;lt;-&amp;gt;Mac間で連携できる。非常に便利5。
iPadのPaperで図を書く ShareからCopyを選択 MacのEmacsでペースト(ペースト時にhookして画像のみ書き込み部分をCrop) 実際の設定 Clipboardから画像を生成するところはpngpaste6、そして画像の余白自動切り抜きはImageMagicのmogrifyを利用している。 メイン処理自体はShellScriptなのでどのエディタからも同じように利用できるはずだ。</description></item><item><title>Ladicle's Emacs Configuration</title><link>https://ladicle.com/post/config/</link><pubDate>Wed, 17 Apr 2019 16:46:00 +0900</pubDate><guid>https://ladicle.com/post/config/</guid><description>.ox-hugo-toc ul { list-style: none; } Table of Contents 1 Configuration 1.1 Table of Contents:TOC_3_gh: 1.2 ScreenShot 1.3 Load Path 1.4 Generic 1.4.1 Server 1.4.2 Editing 1.4.3 Smartparens 1.4.4 History 1.4.5 GUI/Font 1.4.6 OS 1.4.7 Icons 1.4.8 posframe 1.4.9 point 1.5 Key-bindings 1.5.1 Mouse 1.5.2 Custom Maps 1.5.3 Global 1.5.4 which-key 1.5.5 Hydra 1.6 Undo/Redo 1.7 Search/Replace 1.7.1 Projectile 1.</description></item><item><title>ox-Hugo Cheat Sheet</title><link>https://ladicle.com/post/ox-hugo-cheat/</link><pubDate>Wed, 16 Jan 2019 14:51:27 +0900</pubDate><guid>https://ladicle.com/post/ox-hugo-cheat/</guid><description>.ox-hugo-toc ul { list-style: none; } Table of Contents 1 図、表、コードの導入と参照 1.1 図のAMP対応 1.2 Chromaによるシンタックスハイライト 2 Subtreeのプロパティと各種機能 [50%] 2.1 TODO DraftフラグをTODOタグで切り替える 2.2 DONE プロパティによる目次とHUGOの制御 3 文字スタイルとHTML 3.1 Markdownに変換されるスタイル一覧 3.2 引用する 3.3 HTMLの制御とNoteブロックの追加 3.4 リスト一覧 4 LaTex数式を埋め込む 5 org-babelによるコードブロックの評価 5.1 Graphviz, PlantUML, ditaaを使ったの出力 5.2 R x ggplot2 によるSVG形式のグラフ出力 6 参考文献 1 図、表、コードの導入と参照 画像や、テーブルはキャプションを付けたり、Code 1のように参照することができる。参照したい名前を #+NAME: &amp;lt;name&amp;gt; に設定すると、通常のorgリンクを使って [[&amp;lt;name&amp;gt;]] で参照できる。デフォルトでは、参照時に番号のみ表示されるが、Code 2のように変数を設定すると識別子まで展開することができる。</description></item></channel></rss>