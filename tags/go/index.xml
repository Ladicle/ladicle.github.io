<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on Ladicle</title><link>https://ladicle.com/tags/go/</link><description>Recent content in go on Ladicle</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 28 Jun 2020 14:08:10 +0900</lastBuildDate><atom:link href="https://ladicle.com/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>独自URL Schemeの追加と、そのハンドラの実装</title><link>https://ladicle.com/post/20200627_182059/</link><pubDate>Sun, 28 Jun 2020 14:08:10 +0900</pubDate><guid>https://ladicle.com/post/20200627_182059/</guid><description>Table of Contents 独自URL Schemeの追加 TIPS Macアプリの簡単なアイコン変更方法 go-scheme-handlerの実装 独自Scheme利用した編集ボタンをつける TIPS Chromeの確認ダイアログを初回のみ表示させる URLには https:// Schemeを利用することが多いが、 mailto: file: のように他にもいろいろなScheme1がある。 また、macOS標準のScheme以外にも独自URL Schemeを追加するアプリケーションも存在する(e.g. org-protocol:)2。 では、これらアプリケーションはどのように登録しているのだろうか?
独自URL Schemeの追加 Figure 1: 独自Schemeを利用したブログの編集ボタン
独自URL Schemeは、Script Editorで作成したApplicationを適宜変更していくと楽に追加できる。 また、URLのハンドリング部分を全てAppleScriptで書いてもいいが、慣れていないので今後のメンテナンスを考えGoで実装したhandlerを呼び出すことにした。
ここでは例として、 go://journal/&amp;lt;date&amp;gt; 形式のリンクを踏むと該当する日記をEmacsで開くものを実装する。 まずはScriptEditorを起動して新規ファイルを作成し、ドキュメント3見つつCode 1のスクリプトを書いた。
on gohandler(input) do shell script &amp;#34;/Applications/GoHandler.app/Contents/MacOS/bin/go-scheme-handler &amp;#34; &amp;amp; (quoted form of input) end gohandler on open location input gohandler(input) end open location display dialog &amp;#34;GoHandler handles URL with the `go:` scheme :)&amp;#34; Code 1: go://.</description></item><item><title>HugoでもTwitterCard画像を自動生成したい</title><link>https://ladicle.com/post/20200623_164459/</link><pubDate>Tue, 23 Jun 2020 14:59:00 +0900</pubDate><guid>https://ladicle.com/post/20200623_164459/</guid><description>Table of Contents どう生成するか考える GoでTwitterCardを生成する カスタマイズのしやすさ フォント、禁則処理、座標計算 etc. 更新のあった記事を対象に生成する HugoにTwitterCard(&amp;amp;OGP)情報を設定する キャッシュ対策 最近、Twitterを眺めているとイイ感じのサムネが設定されたブログ記事を見かけるようになった。 OGP1やTwitterCardl2にはそのような生成機能が無いので各々画像を生成しているのだと思われるが、 Hugoにもそのような機能は無い。ということで、この土日にGoで画像生成するコマンドを書いた。
どう生成するか考える Hugoは静的サイトジェネレータなので、一般的なブログサービスのように動的なことは考えず、 単純にサイト生成時に画像も生成すれば良いだろう。
では、どう生成すべきか？ImageMagicを使う方法や、Hugoでサムネ用ページを生成しそれをCode 1のように Headless Chrome を使ってスクショを撮る方法が考えられる。しかし、サムネをスクショするだけに起動するには少々重い。
docker run --rm -u $(id -u $USER) --cap-add=SYS_ADMIN --name capture -v $PWD:/workdir -w /workdir \ justinribeiro/chrome-headless \ --window-size=1200,628 \ --headless \ --disable-gpu \ --screenshot http://path.to/capture/target Code 1: Headless Chromeを使ってスクリーンショットを生成する例 このサイトを生成しているGitHub Actionでも動くような、軽量でポータブルなものが欲しい。 ということで、GoでHugoの記事からサムネ画像生成するCLIを作ることにした。</description></item></channel></rss>